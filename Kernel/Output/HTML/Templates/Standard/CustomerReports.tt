[% RenderBlockStart("Body") %]
####################################################################
# Seletor de Empresas / Contratos
####################################################################
<style type="text/css">
.CustomerIDSelector {
    float:left;
}
.Visible-ScreenXS .CustomerIDSelector, .Visible-ScreenS .CustomerIDSelector {
    display:block;
    width: 100%;
    text-align:center;
    margin-top:10px;
    padding-bottom:10px;
    border-bottom: 1px solid #ccc;
}
.Visible-ScreenXS .CustomerIDSelector label, .Visible-ScreenS .CustomerIDSelector label {
    width:100%;
    text-align:center;
}
</style>
<br>
			[% RenderBlockStart("CustomerID") %]
			        <div class="CustomerIDSelector">
			            <label for="UserCustomerID">[% Translate(Data.SelectorLabel) %]</label>
			            [% Data.CustomerIDsStrg %]        
			        </div>
			[% WRAPPER JSOnDocumentComplete %]
			<script type="text/javascript">//<![CDATA[
			    $('#UserCustomerID').bind('change', function (Event) {
			            window.location = "[% Env("Baselink") %]Action=[% Env("Action") %];Subaction=[% Env("Subaction") %];UserCustomerID="+$(this).val()+";CustomerID="+$(this).val();
			            return false;
			    });
			//]]></script>
			[% END %]
			[% RenderBlockEnd("CustomerID") %]

####################################################################
# Dashboard de horas por mês por cota
####################################################################
<div id="CustomerTimeDashboard1" class="Box" style="width:100%">
</div>
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
$(document).ready(function() {
    Highcharts.setOptions({
            global: {
            },
            lang: {
              //decimalPoint: 'h',
              //thousandsSep: 'h'
            }
        });
    [% RenderBlockStart("TicketTypeSerie") %]
        var data =  [% Data.Serie %] ;
        var category = [% Data.Category %];
    [% RenderBlockEnd("TicketTypeSerie") %]
    $('#CustomerTimeDashboard1').highcharts({
        chart: {
            type: 'column',
        },
        credits: {
            enabled: false
        },
        title: {
            text: '[% Data.GraphTitle %]'
        },
        subtitle: {
            text: 'Tickets'
        },
        xAxis: {
            categories: category,
            labels:{
                step:1,
                rotation: 0
            },
        },
        yAxis: {
            title: {
                text: '[% Translate("Hours") | html %]'
            },
            plotLines: [{
                  value: 0,
                      width: 1,
                      color: '#808080'
            }],
            scalable: false,
            startOnTick: false,
            endOnTick: false
        },
        
        responsive: {
        rules: [{
            condition: {
                maxWidth: 1020
            },
            // Make the labels less space demanding on mobile
            chartOptions: {
                legend: {
                    layout: 'vertical',
                    align: 'center',
                    verticalAlign: 'bottom',
                    x: 0,
                    y: 0,
                    borderWidth: 0
                },
                xAxis: {
                    labels: {
                        rotation: -90
                        //formatter: function () {
                            //return this.value.charAt(0);
                        //}
                    }
                },
                yAxis: {
                    labels: {
                        align: 'left',
                        x: 0,
                        y: -2
                    },
                    title: {
                        text: ''
                    }
                }
            }
        },
        {
            condition: {
                minWidth: 1020
            },
            // Make the labels less space demanding on mobile
            chartOptions: {
                legend: {
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'top',
                    x: -10,
                    y: 100,
                    borderWidth: 0
                },

                xAxis: {
                    labels: {
                        rotation: 0
                        //formatter: function () {
                            //return this.value.charAt(0);
                        //}
                    }
                },
                yAxis: {
                    labels: {
                        align: 'left',
                        x: 0,
                        y: -2
                    },
                    title: {
                        text: ''
                    }
                }
            }
        }
        
        ]
    },
        
        
        
        
        
        
        tooltip: {
            formatter: function () {
                var hms=''+this.y;
                var hma=hms.split('.');
                var h=hma[0];
                var str=h+'h';
                var m=hma[1];
                if(m>0){
                    // Regra de 3 para converter fração de horas em minutos
                    m=''+((hms-h)*60/100);
                    str+=m.substring(2,4)+'m';
                }
                return '<b>' + str + '</b>';
            },
            //pointFormat: '<b>{point.y}</b><br/>',	
        },
        legend: {
            layout: 'vertical',
            align: 'right',
            verticalAlign: 'top',
            x: -10,
            y: 100,
            borderWidth: 0
        },
        plotOptions: {
            line: {
                dataLabels: {
                    enabled: true,
                    formatter: function () {
                        var valor = this.y;
                                    return Highcharts.numberFormat(valor,2);
                    }
                }
            }
        },
        series: data
    });
});
//]]></script>
[% END %]
        <div class="Clear"></div>
[% RenderBlockEnd("Body") %]

####################################################################
# Meses
####################################################################
<div id="MainBox" class="TicketView ARIARoleMain [% Config("Ticket::Frontend::CustomerTicketOverviewSortable") %]">
[% RenderBlockStart("Filled") %]
    <div class="ActionRow">
        <ul class="Filter Tabs">
[% RenderBlockStart("FilterHeader") %]
            <li>
                <a class="[% Data.ClassA | html %]" href="[% Env("Baselink") %]Action=[% Env("Action") %];Subaction=[% Env("Subaction") %];Filter=[% Data.Filter | uri %];SortBy=[% Data.SortBy | uri %];OrderBy=[% Data.OrderBy | uri %];">
                    [% Translate(Data.Name) | html %]-[% Translate(Data.Year) | html %] ([% Data.Count | html %])
                </a>
            </li>
[% RenderBlockEnd("FilterHeader") %]
        </ul>
        <div class="Tabs Pagination">
            [% Data.SiteNavBar %]
        </div>
        <div class="Clear"></div>
    </div>
    <div class="Content">
        <table class="Overview">
                        <thead>
                <tr>
                    <th class="Ticket [% Data.TicketSort | uri %]">
                        <a href="[% Env("Baselink") %]Action=[% Env("Action") %];Subaction=[% Env("Subaction") %];SortBy=Ticket;OrderBy=[% Data.OrderBy | uri %];Filter=[% Data.Filter | uri %]">
                            [% Config("Ticket::Hook") %]
                        </a>
                    </th>
                    <th class="Title [% Data.TitleSort | uri %]">
                        <a href="[% Env("Baselink") %]Action=[% Env("Action") %];Subaction=[% Env("Subaction") %];SortBy=Title;OrderBy=[% Data.OrderBy | uri %];Filter=[% Data.Filter | uri %]">
                            [% Translate("Title") | html %]
                        </a>
                    </th>
                    <th class="State [% Data.StateSort | uri %]">
                        <a href="[% Env("Baselink") %]Action=[% Env("Action") %];Subaction=[% Env("Subaction") %];SortBy=State;OrderBy=[% Data.OrderBy | uri %];Filter=[% Data.Filter | uri %]">
                            [% Translate("State") | html %]
                        </a>
                    </th>
[% RenderBlockStart("OverviewNavBarPageOwner") %]
                    <th class="Owner [% Data.OwnerSort | uri %]">
                        <a href="[% Env("Baselink") %]Action=[% Env("Action") %];Subaction=[% Env("Subaction") %];SortBy=Owner;OrderBy=[% Data.OrderBy | uri %];Filter=[% Data.Filter | uri %]">
                            [% Translate("Owner") | html %]
                        </a>
                    </th>
[% RenderBlockEnd("OverviewNavBarPageOwner") %]
[% RenderBlockStart("OverviewNavBarPageQueue") %]
                    <th class="Queue [% Data.QueueSort | uri %]">
                        <a href="[% Env("Baselink") %]Action=[% Env("Action") %];Subaction=[% Env("Subaction") %];SortBy=Queue;OrderBy=[% Data.OrderBy | uri %];Filter=[% Data.Filter | uri %]">
                            [% Translate("Queue") | html %]
                        </a>
                    </th>
[% RenderBlockEnd("OverviewNavBarPageQueue") %]
[% RenderBlockStart("OverviewNavBarPageDynamicField") %]
                    <th class="DynamicField Last [% Data.CSS | html %]">
[% RenderBlockStart("OverviewNavBarPageDynamicFieldSortable") %]
                        <a name="OverviewControl" href="[% Env("Baselink") %]Action=[% Env("Action") %];Subaction=[% Env("Subaction") %];SortBy=DynamicField_[% Data.DynamicFieldName | uri %];OrderBy=[% Data.OrderBy | uri %];Filter=[% Data.Filter | uri %]">[% Translate(Data.Label) | html %]</a>
[% RenderBlockEnd("OverviewNavBarPageDynamicFieldSortable") %]
[% RenderBlockStart("OverviewNavBarPageDynamicFieldNotSortable") %]
                        <span>[% Translate(Data.Label) | html %]</span>
[% RenderBlockEnd("OverviewNavBarPageDynamicFieldNotSortable") %]
                    </th>
[% RenderBlockEnd("OverviewNavBarPageDynamicField") %]
# example of how to use fixed dynamic field blocks for customizations
# Note: Field1 and Field2 are the names of the fields and had to be replaced with the actual
# field names
#[% RenderBlockStart("OverviewNavBarPageDynamicField_Field1") %]
#                    <th class="DynamicField Last [% Data.CSS | html %]">
#[% RenderBlockStart("OverviewNavBarPageDynamicField_Field1_Sortable") %]
#                        <a name="OverviewControl" href="[% Env("Baselink") %]Action=[% Env("Action") %];Subaction=[% Env("Subaction") %];SortBy=DynamicField_[% Data.DynamicFieldName | uri %];OrderBy=[% Data.OrderBy | uri %];Filter=[% Data.Filter | uri %]">[% Translate(Data.Label) | html %]</a>
#[% RenderBlockEnd("OverviewNavBarPageDynamicField_Field1_Sortable") %]
#[% RenderBlockStart("OverviewNavBarPageDynamicField_Field1_NotSortable") %]
#                        <span>[% Translate(Data.Label) | html %]</span>
#[% RenderBlockEnd("OverviewNavBarPageDynamicField_Field1_NotSortable") %]
#                    </th>
#[% RenderBlockEnd("OverviewNavBarPageDynamicField_Field1") %]
#[% RenderBlockStart("OverviewNavBarPageDynamicField_Field2") %]
#                    <th class="DynamicField Last [% Data.CSS | html %]">
#[% RenderBlockStart("OverviewNavBarPageDynamicField_Field2_Sortable") %]
#                        <a name="OverviewControl" href="[% Env("Baselink") %]Action=[% Env("Action") %];[% Data.LinkSort %];SortBy=DynamicField_[% Data.DynamicFieldName | uri %];OrderBy=[% Data.OrderBy | uri %]">[% Translate(Data.Label) | html %]</a>
#[% RenderBlockEnd("OverviewNavBarPageDynamicField_Field2_Sortable") %]
#[% RenderBlockStart("OverviewNavBarPageDynamicField_Field2_NotSortable") %]
#                        <span>[% Translate(Data.Label) | html %]</span>
#[% RenderBlockEnd("OverviewNavBarPageDynamicField_Field2_NotSortable") %]
#                    </th>
#[% RenderBlockEnd("OverviewNavBarPageDynamicField_Field2") %]
                    <th class="Age [% Data.AgeSort | uri %]">
                        <a href="[% Env("Baselink") %]Action=[% Env("Action") %];Subaction=[% Env("Subaction") %];SortBy=Age;OrderBy=[% Data.OrderBy | uri %];Filter=[% Data.Filter | uri %]">
                            [% Translate("Age") | html %]
                        </a>
                    </th>
                </tr>
            </thead>
 
            <tbody>
[% RenderBlockStart("Record") %]
                <tr class="MasterAction">
                    <td class="Ticket">
                        <a href="[% Env("Baselink") %]Action=CustomerTicketZoom;TicketNumber=[% Data.TicketNumber | uri %]" class="MasterActionLink">[% Data.TicketNumber | html %]</a>
                    </td>
 		   
                    <td class="Title">
                        <div>
                            <h2>[% Data.Subject | truncate(60) | html %]</h2>
                            &nbsp;-&nbsp; [% Data.Body | truncate(200) | html %]
                        </div>
                    </td>
                    <td class="Status">[% Translate(Data.State) | html %]</td>
[% RenderBlockStart("RecordOwner") %]
                    <td class="Owner">[% Data.OwnerName | html %]</td>
[% RenderBlockEnd("RecordOwner") %]
[% RenderBlockStart("RecordQueue") %]
                    <td class="Queue" title="[% Data.Queue | html %]">[% Data.Queue | truncate(20) | html %]</td>
[% RenderBlockEnd("RecordQueue") %]
[% RenderBlockStart("RecordDynamicField") %]
                    <td>
                        <div title="[% Data.Title | html %]">
[% RenderBlockStart("RecordDynamicFieldLink") %]
                            <a href="[% Data.Link | Interpolate %]" class="DynamicFieldLink">[% Data.Value %]</a>
[% RenderBlockEnd("RecordDynamicFieldLink") %]
[% RenderBlockStart("RecordDynamicFieldPlain") %]
                            [% Data.Value %]
[% RenderBlockEnd("RecordDynamicFieldPlain") %]
                        </div>
                    </td>
[% RenderBlockEnd("RecordDynamicField") %]

                    <td class="Age" title="[% Data.Created | Localize("TimeShort") | html %]">[% Data.CustomerAge | truncate(20) | html %]</td>
 			<td class="Age">
                        <a href="[% Env("Baselink") %]Action=CustomerTicketZoom;TicketNumber=[% Data.TicketNumber | uri %]" class="MasterActionLink">[% Data.TimesUsedByTicket | html %]</a>
                    </td>
                </tr>
[% RenderBlockEnd("Record") %]
[% WRAPPER JSOnDocumentComplete %]
<script type="text/javascript">//<![CDATA[
    $('.MasterAction').bind('click', function (Event) {
        var $MasterActionLink = $(this).find('.MasterActionLink');
        // only act if the link was not clicked directly
        if (Event.target !== $MasterActionLink.get(0)) {
            window.location = $MasterActionLink.attr('href');
            return false;
        }
    });
//]]></script>
[% END %]
            </tbody>
        </table>
    </div>
[% RenderBlockStart("FilterFooter") %]
    <div id="" class="ActionRow BigButtons">
        <ul class="Tabs Filter">
[% RenderBlockStart("FilterFooterItem") %]
            <li class="[% Data.ClassLI | html %]">
                <a class="[% Data.ClassA | html %]" href="[% Env("Baselink") %]Action=[% Env("Action") %];Subaction=[% Env("Subaction") %];Filter=[% Data.Filter | uri %];SortBy=[% Data.SortBy | uri %];OrderBy=[% Data.OrderBy | uri %];">
                    [% Translate(Data.Name) | html %] ([% Data.Count | html %])
                </a>
            </li>
[% RenderBlockEnd("FilterFooterItem") %]
            <li class="Clear"></li>
        </ul>
        <div class="Tabs Pagination">
            [% Data.SiteNavBar %]
        </div>
        <div class="Clear"></div>
    </div>
[% RenderBlockEnd("FilterFooter") %]
[% RenderBlockEnd("Filled") %]

[% RenderBlockStart("Empty") %]
    <div class="Placeholder">
[% RenderBlockStart("EmptyDefault") %]
        <h2>[% Translate("Welcome!") | html %]</h2>
        <p>
            [% Translate("Please click the button below to create your first ticket.") | html %]
        </p>
[% RenderBlockStart("EmptyDefaultButton") %]
        <a class="Button" href="[% Env("Baselink") %]Action=CustomerTicketMessage">[% Translate("Create your first ticket") | html %]</a>
[% RenderBlockEnd("EmptyDefaultButton") %]
[% RenderBlockEnd("EmptyDefault") %]
[% RenderBlockStart("EmptyCustom") %]
        <h2>[% Translate(Data.Title) | html %]</h2>
        <p>
            [% Translate(Data.Text) | html %]
        </p>
[% RenderBlockStart("EmptyCustomButton") %]
        <a class="Button" href="[% Env("Baselink") %]Action=CustomerTicketMessage">[% Translate(Data.Button) | html %]</a>
[% RenderBlockEnd("EmptyCustomButton") %]
[% RenderBlockEnd("EmptyCustom") %]
    </div>
[% RenderBlockEnd("Empty") %]
</div>



